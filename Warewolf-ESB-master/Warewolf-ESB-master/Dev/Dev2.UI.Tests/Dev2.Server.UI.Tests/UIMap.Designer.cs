
/*
*  Warewolf - The Easy Service Bus
*  Copyright 2014 by Warewolf Ltd <alpha@warewolf.io>
*  Licensed under GNU Affero General Public License 3.0 or later. 
*  Some rights reserved.
*  Visit our website for more information <http://warewolf.io/>
*  AUTHORS <http://warewolf.io/authors.php> , CONTRIBUTORS <http://warewolf.io/contributors.php>
*  @license GNU Affero General Public License <http://www.gnu.org/licenses/agpl-3.0.html>
*/


// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Dev2.Server.UI.Tests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// TypeTextInNameTextbox - Use 'TypeTextInNameTextboxParams' to pass parameters into this method.
        /// </summary>
        public void TypeTextInNameTextbox()
        {
            #region Variable Declarations
            HtmlEdit uIDev2elementNameDatePEdit = this.UIWebpageWindowsInternWindow.UIWebpageDocument.UIDev2elementNameDatePEdit;
            #endregion

            // Type 'test123' in 'Dev2elementNameDatePicker' text box
            uIDev2elementNameDatePEdit.Text = this.TypeTextInNameTextboxParams.UIDev2elementNameDatePEditText;
        }
        
        /// <summary>
        /// ClickDoneButton
        /// </summary>
        public void ClickDoneButton()
        {
            #region Variable Declarations
            HtmlButton uIDoneButton = this.UIWebpageWindowsInternWindow.UIWebpageDocument.UIDoneButton;
            #endregion

            // Click 'Done' button
            Mouse.Click(uIDoneButton, new Point(67, 4));
        }
        
        /// <summary>
        /// DialogExists_MissingRequiredInformation
        /// </summary>
        public void DialogExists_MissingRequiredInformation()
        {
            #region Variable Declarations
            HtmlDiv uIMissingRequiredInforPane = this.UIWebpageWindowsInternWindow.UIWebpageDocument.UIMissingRequiredInforPane;
            #endregion

            // Verify that the 'TagName' property of 'Missing Required Informationclose Ple' pane equals 'null'
            Assert.IsNull(uIMissingRequiredInforPane.TagName);
        }
        
        /// <summary>
        /// DatabaseWizard_ClickServerBrowseButton
        /// </summary>
        public void DatabaseWizard_ClickServerBrowseButton()
        {
            #region Variable Declarations
            HtmlButton uIItemButton = this.UIDatabaseServiceDetaiWindow.UIDatabaseServiceDetaiDocument.UIItemButton;
            #endregion

            // Click '...' button
            Mouse.Click(uIItemButton, new Point(13, 14));
        }
        
        /// <summary>
        /// AlertBoxExists
        /// </summary>
        public void AlertBoxExists()
        {
            #region Variable Declarations
            HtmlDiv uIAlertcloseOKPane1 = this.UIDatabaseServiceDetaiWindow.UIDatabaseSourceManageDocument.UIAlertcloseOKPane1;
            #endregion

            // Verify that the 'FriendlyName' property of 'Alertclose OK' pane is not equal to 'null'
            Assert.IsNotNull(uIAlertcloseOKPane1.FriendlyName);
        }
        
        /// <summary>
        /// AlertBoxDoesntExist - Use 'AlertBoxDoesntExistExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AlertBoxDoesntExist()
        {
            #region Variable Declarations
            HtmlDiv uIAlertcloseOKPane1 = this.UIDatabaseServiceDetaiWindow.UIDatabaseSourceManageDocument.UIAlertcloseOKPane1;
            #endregion

            // Verify that the 'FriendlyName' property of 'Alertclose OK' pane does not match 'Alertclose OK'
            StringAssert.DoesNotMatch(uIAlertcloseOKPane1.FriendlyName, new Regex(this.AlertBoxDoesntExistExpectedValues.UIAlertcloseOKPane1FriendlyName));
        }
        
        /// <summary>
        /// WorkflowWebWizard_ClickNameTextBox
        /// </summary>
        public void WorkflowWebWizard_ClickNameTextBox()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIServiceDetailsMozillWindow.UIItemCell.UIItemEdit;
            #endregion

            // Click text box
            Mouse.Click(uIItemEdit, new Point(179, 11));
        }
        
        /// <summary>
        /// WorkflowWebWizard_ClickCategoryTextBox
        /// </summary>
        public void WorkflowWebWizard_ClickCategoryTextBox()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIServiceDetailsMozillWindow.UIItemCell.UIItemEdit;
            #endregion

            // Click text box
            Mouse.Click(uIItemEdit, new Point(159, 5));
        }
        
        #region Properties
        public virtual TypeTextInNameTextboxParams TypeTextInNameTextboxParams
        {
            get
            {
                if ((this.mTypeTextInNameTextboxParams == null))
                {
                    this.mTypeTextInNameTextboxParams = new TypeTextInNameTextboxParams();
                }
                return this.mTypeTextInNameTextboxParams;
            }
        }
        
        public virtual AlertBoxDoesntExistExpectedValues AlertBoxDoesntExistExpectedValues
        {
            get
            {
                if ((this.mAlertBoxDoesntExistExpectedValues == null))
                {
                    this.mAlertBoxDoesntExistExpectedValues = new AlertBoxDoesntExistExpectedValues();
                }
                return this.mAlertBoxDoesntExistExpectedValues;
            }
        }
        
        public UIWebpageWindowsInternWindow UIWebpageWindowsInternWindow
        {
            get
            {
                if ((this.mUIWebpageWindowsInternWindow == null))
                {
                    this.mUIWebpageWindowsInternWindow = new UIWebpageWindowsInternWindow();
                }
                return this.mUIWebpageWindowsInternWindow;
            }
        }
        
        public UIDatabaseServiceDetaiWindow UIDatabaseServiceDetaiWindow
        {
            get
            {
                if ((this.mUIDatabaseServiceDetaiWindow == null))
                {
                    this.mUIDatabaseServiceDetaiWindow = new UIDatabaseServiceDetaiWindow();
                }
                return this.mUIDatabaseServiceDetaiWindow;
            }
        }
        
        public UIServiceDetailsMozillWindow UIServiceDetailsMozillWindow
        {
            get
            {
                if ((this.mUIServiceDetailsMozillWindow == null))
                {
                    this.mUIServiceDetailsMozillWindow = new UIServiceDetailsMozillWindow();
                }
                return this.mUIServiceDetailsMozillWindow;
            }
        }
        #endregion
        
        #region Fields
        private TypeTextInNameTextboxParams mTypeTextInNameTextboxParams;
        
        private AlertBoxDoesntExistExpectedValues mAlertBoxDoesntExistExpectedValues;
        
        private UIWebpageWindowsInternWindow mUIWebpageWindowsInternWindow;
        
        private UIDatabaseServiceDetaiWindow mUIDatabaseServiceDetaiWindow;
        
        private UIServiceDetailsMozillWindow mUIServiceDetailsMozillWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TypeTextInNameTextbox'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class TypeTextInNameTextboxParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'test123' in 'Dev2elementNameDatePicker' text box
        /// </summary>
        public string UIDev2elementNameDatePEditText = "test123";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AlertBoxDoesntExist'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AlertBoxDoesntExistExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of 'Alertclose OK' pane does not match 'Alertclose OK'
        /// </summary>
        public string UIAlertcloseOKPane1FriendlyName = "Alertclose OK";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIWebpageWindowsInternWindow : BrowserWindow
    {
        
        public UIWebpageWindowsInternWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Webpage";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Webpage");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIWebpageDocument UIWebpageDocument
        {
            get
            {
                if ((this.mUIWebpageDocument == null))
                {
                    this.mUIWebpageDocument = new UIWebpageDocument(this);
                }
                return this.mUIWebpageDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIWebpageDocument mUIWebpageDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIWebpageDocument : HtmlDocument
    {
        
        public UIWebpageDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Webpage";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/services/Date%20Picker.wiz";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://127.0.0.1:1234/services/Date%20Picker.wiz";
            this.WindowTitles.Add("Webpage");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIDev2elementNameDatePEdit
        {
            get
            {
                if ((this.mUIDev2elementNameDatePEdit == null))
                {
                    this.mUIDev2elementNameDatePEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDev2elementNameDatePEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Dev2elementNameDatePicker";
                    this.mUIDev2elementNameDatePEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Dev2elementNameDatePicker";
                    this.mUIDev2elementNameDatePEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIDev2elementNameDatePEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDev2elementNameDatePEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDev2elementNameDatePEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "requiredClass ";
                    this.mUIDev2elementNameDatePEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=\"Dev2elementNameDatePicker\" class=\"re";
                    this.mUIDev2elementNameDatePEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIDev2elementNameDatePEdit.WindowTitles.Add("Webpage");
                    #endregion
                }
                return this.mUIDev2elementNameDatePEdit;
            }
        }
        
        public HtmlButton UIDoneButton
        {
            get
            {
                if ((this.mUIDoneButton == null))
                {
                    this.mUIDoneButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIDoneButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ButtonClickedDone";
                    this.mUIDoneButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ButtonClickedDone";
                    this.mUIDoneButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "Done";
                    this.mUIDoneButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIDoneButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIDoneButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIDoneButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=\"ButtonClickedDone\" name=\"ButtonClick";
                    this.mUIDoneButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "4";
                    this.mUIDoneButton.WindowTitles.Add("Webpage");
                    #endregion
                }
                return this.mUIDoneButton;
            }
        }
        
        public HtmlDiv UIMissingRequiredInforPane
        {
            get
            {
                if ((this.mUIMissingRequiredInforPane == null))
                {
                    this.mUIMissingRequiredInforPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMissingRequiredInforPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIMissingRequiredInforPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMissingRequiredInforPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Missing Required Informationclose\r\n\r\nPle";
                    this.mUIMissingRequiredInforPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMissingRequiredInforPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-dialog ui-widget ui-widget-content ui-corner-all ui-draggable ui-resizable";
                    this.mUIMissingRequiredInforPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"outline: 0px; left: 497px; top: 2";
                    this.mUIMissingRequiredInforPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "18";
                    this.mUIMissingRequiredInforPane.WindowTitles.Add("Webpage");
                    #endregion
                }
                return this.mUIMissingRequiredInforPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIDev2elementNameDatePEdit;
        
        private HtmlButton mUIDoneButton;
        
        private HtmlDiv mUIMissingRequiredInforPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDatabaseServiceDetaiWindow : BrowserWindow
    {
        
        public UIDatabaseServiceDetaiWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Database Service Details";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Database Service Details");
            this.WindowTitles.Add("Database Source Management");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIDatabaseServiceDetaiDocument UIDatabaseServiceDetaiDocument
        {
            get
            {
                if ((this.mUIDatabaseServiceDetaiDocument == null))
                {
                    this.mUIDatabaseServiceDetaiDocument = new UIDatabaseServiceDetaiDocument(this);
                }
                return this.mUIDatabaseServiceDetaiDocument;
            }
        }
        
        public UIDatabaseSourceManageDocument UIDatabaseSourceManageDocument
        {
            get
            {
                if ((this.mUIDatabaseSourceManageDocument == null))
                {
                    this.mUIDatabaseSourceManageDocument = new UIDatabaseSourceManageDocument(this);
                }
                return this.mUIDatabaseSourceManageDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIDatabaseServiceDetaiDocument mUIDatabaseServiceDetaiDocument;
        
        private UIDatabaseSourceManageDocument mUIDatabaseSourceManageDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDatabaseServiceDetaiDocument : HtmlDocument
    {
        
        public UIDatabaseServiceDetaiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Database Service Details";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/services/Dev2ServiceDetails";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://127.0.0.1:1234/services/Dev2ServiceDetails?Dev2ServiceType=Database";
            this.WindowTitles.Add("Database Service Details");
            #endregion
        }
        
        #region Properties
        public HtmlButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[HtmlButton.PropertyNames.Id] = "Dev2ServiceDetailsOpenSourceManagement";
                    this.mUIItemButton.SearchProperties[HtmlButton.PropertyNames.Name] = "Dev2ServiceDetailsOpenSourceManagement";
                    this.mUIItemButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "...";
                    this.mUIItemButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIItemButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIItemButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIItemButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "style=\"width: 30px; display: inline;\" id";
                    this.mUIItemButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUIItemButton.WindowTitles.Add("Database Service Details");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDatabaseSourceManageDocument : HtmlDocument
    {
        
        public UIDatabaseSourceManageDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Database Source Management";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/services/DatabaseSourceManagement";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://127.0.0.1:1234/services/DatabaseSourceManagement?Dev2SourceManagementDatab" +
                "aseSource=bobsDB&Dev2ServiceName=&Dev2ServiceType=Database&Dev2SourceName=bobsDB" +
                "&Dev2Category=&Dev2Help=&Dev2Icon=&Dev2Description=&Dev2Tags=&Dev2NewService=";
            this.WindowTitles.Add("Database Source Management");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAlertcloseOKPane
        {
            get
            {
                if ((this.mUIAlertcloseOKPane == null))
                {
                    this.mUIAlertcloseOKPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAlertcloseOKPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAlertcloseOKPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAlertcloseOKPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Alertclose\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nOK";
                    this.mUIAlertcloseOKPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAlertcloseOKPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-dialog ui-widget ui-widget-content ui-corner-all ui-draggable ui-resizable";
                    this.mUIAlertcloseOKPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"outline: 0px; left: 443px; top: 1";
                    this.mUIAlertcloseOKPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "3";
                    this.mUIAlertcloseOKPane.WindowTitles.Add("Database Source Management");
                    #endregion
                }
                return this.mUIAlertcloseOKPane;
            }
        }
        
        public HtmlDiv UIAlertcloseOKPane1
        {
            get
            {
                if ((this.mUIAlertcloseOKPane1 == null))
                {
                    this.mUIAlertcloseOKPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAlertcloseOKPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAlertcloseOKPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAlertcloseOKPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Alertclose\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nOK";
                    this.mUIAlertcloseOKPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAlertcloseOKPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-dialog ui-widget ui-widget-content ui-corner-all ui-draggable ui-resizable";
                    this.mUIAlertcloseOKPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"outline: 0px; left: 497px; top: 2";
                    this.mUIAlertcloseOKPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "3";
                    this.mUIAlertcloseOKPane1.WindowTitles.Add("Database Source Management");
                    #endregion
                }
                return this.mUIAlertcloseOKPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAlertcloseOKPane;
        
        private HtmlDiv mUIAlertcloseOKPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIServiceDetailsMozillWindow : WinWindow
    {
        
        public UIServiceDetailsMozillWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Service Details - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Service Details - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIItemCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new UIItemCell(this);
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemCell : WinCell
    {
        
        public UIItemCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Service Details - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Service Details - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
}
