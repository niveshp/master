<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:interfaceImplementors="clr-namespace:Dev2.Studio.InterfaceImplementors;assembly=Dev2.Intellisense"
                    xmlns:customControlsConverters="clr-namespace:Dev2.CustomControls.Converters;assembly=Dev2.CustomControls"
                    xmlns:studioConverters="clr-namespace:Dev2.Studio.Core.AppResources.Converters;assembly=Dev2.Studio.Core"
                    xmlns:ui="clr-namespace:Dev2.UI;assembly=Dev2.Intellisense"                                        
                    xmlns:customControls="clr-namespace:Dev2.CustomControls;assembly=Dev2.CustomControls"
                    xmlns:converters="clr-namespace:Dev2.AppResources.Converters;assembly=Dev2.Studio.Core"
    x:Class="ArbitraryNameToEliminateBogusGenericsErrorDsfActivityResources">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Dev2.Activities.Designers;component/Themes/ActivityStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <customControlsConverters:EmptyStringToBoolConverter x:Key="EmptyStringToBoolConverter" />
    <customControlsConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" TrueValue="Visible" FalseValue="Collapsed"/>
    <customControlsConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverterInverse" TrueValue="Collapsed" FalseValue="Visible"/>

    <converters:CollectionToVisibilityConverter x:Key="CollectionToVisibilityConverterPositive" TrueValue="Visible" FalseValue="Collapsed" />
    <converters:CollectionToVisibilityConverter x:Key="CollectionToVisibilityConverterNegative" TrueValue="Collapsed" FalseValue="Visible" />
    <studioConverters:ForEachTypeToVisibilityConverter x:Key="ForEachTypeToVisibilityConverter" />
    <studioConverters:EnumDiscriptionToStringConverter x:Key="EnumDiscriptionToStringConverter" />
    <studioConverters:EnumDisplayNameToItemSourceConverter x:Key="EnumDisplayNameToItemSourceConverter" />
    <studioConverters:FindRecordsTypeToBoolConverter x:Key="FindRecordsTypeToBoolConverter" />
    <studioConverters:SplitTypeToEnabledConverter x:Key="SplitTypeToEnabledConverter" />
    <studioConverters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    <studioConverters:IntToVisibilityConverter x:Key="IntToVisibilityConverter"/>
    
    <interfaceImplementors:CalculateIntellisenseTextConverter x:Key="ModelTextConverter" />

    <interfaceImplementors:CompositeIntellisenseProvider x:Key="DateTimeCompositeIntellisenseProvider">
        <interfaceImplementors:DefaultIntellisenseProvider />
        <interfaceImplementors:DateTimeIntellisenseProvider />
    </interfaceImplementors:CompositeIntellisenseProvider>

    <interfaceImplementors:CompositeIntellisenseProvider x:Key="CalculateCompositeIntellisenseProvider">
        <interfaceImplementors:DefaultIntellisenseProvider />
        <interfaceImplementors:CalculateIntellisenseProvider />
    </interfaceImplementors:CompositeIntellisenseProvider>

    <Style x:Key="DatagridIntellisenseTextBoxStyle"
           TargetType="{x:Type ui:IntellisenseTextBox}"
           BasedOn="{StaticResource ActivityIntellisenseTextBoxStyle}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="2,5,0,0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="Auto" />
        <Setter Property="MaxHeight" Value="23" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=HasError}"
                         Value="True">
                <Setter Property="Foreground"
                        Value="{StaticResource ValidationErrorElement}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource ValidationErrorElement}" />
            </DataTrigger>
            <Trigger Property="Validation.HasError"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{StaticResource ValidationErrorElement}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource ValidationErrorElement}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
     <Style x:Key="SpacedActivityDataGridStyle" BasedOn="{StaticResource ActivityDataGridStyle}" TargetType="{x:Type DataGrid}">
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="RowStyle" Value="{StaticResource SpacedDataGridRowStyle}"/>  
    </Style>
    
    <Style x:Key="NonSelectableActivityDataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="HeadersVisibility" Value="None"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="MinHeight" Value="53"/>
        <Setter Property="MaxHeight" Value="53"/>
        <Setter Property="Margin" Value="0"/>     
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="RowStyle" Value="{StaticResource NonSelectableDataGridRowStyle}"/>  
    </Style>
     
    <Style x:Key="ActivityMapppingDataGridStyle" BasedOn="{StaticResource SpacedActivityDataGridStyle}" TargetType="{x:Type DataGrid}">
        <Setter Property="Margin" Value="0,4"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DataGridBorderBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource DataGridBorderBrush}"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="MinHeight" Value="60"/>
        <Setter Property="MaxHeight" Value="Infinity"/>
    </Style>
    
    <Style x:Key="ActivityMapppingDataGridHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{StaticResource DataGridColumnHeaderBackgroundBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="3,0" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="BorderBrush" Value="{StaticResource DataGridBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BrushDarkForeground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Height" Value="Auto" />
    </Style>      
    
    <Style x:Key="ActivityMapppingDataGridIntellisenseTextBoxStyle"
           TargetType="{x:Type ui:IntellisenseTextBox}"
           BasedOn="{StaticResource DatagridIntellisenseTextBoxStyle}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="WrapInBrackets" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="AllowUserInsertLine" Value="False"/>
    </Style>
    
    <Style x:Key="ActivityMapppingIntellisenseTextBoxStyle"
           TargetType="{x:Type ui:IntellisenseTextBox}">
        <Setter Property="WrapInBrackets" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,3"/>
        <Setter Property="Width" Value="Auto"/>
    </Style>
       
    <Style x:Key="ActivityMapppingComboBoxStyle"
           TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ActivityComboBoxStyle}">
        <Setter Property="Margin" Value="0,3"/>
    </Style>
    
    <Style x:Key="ActivityMapppingLabelStyle"
           TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="0,0,5,0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <Style x:Key="ActivityEditButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Margin" Value="2,2,1,2" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="24" />
    </Style>

    <Image x:Key="RefreshImage"
           Source="pack://application:,,,/Dev2.Activities.Designers;component/Images/Refresh-16.png"
           Width="14"
           Height="14"
           HorizontalAlignment="Center"
           VerticalAlignment="Center"
           Visibility="{Binding IsRefreshing, Converter={StaticResource BoolToVisibilityConverterInverse}}"
           AutomationProperties.AutomationId="{Binding ModelItem.AutomationID, StringFormat=UI_{0}_RefreshImage_AutoID}"/>
    
    <customControls:CircularProgressBar x:Key="RefreshProgressBar"
                                        Height="16"
                                        Width="16"
                                        Margin="0,0,0,0"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Visibility="{Binding IsRefreshing, Converter={StaticResource BoolToVisibilityConverter}}"
                                        AutomationProperties.AutomationId="{Binding ModelItem.AutomationID, StringFormat=UI_{0}_RefreshProgressBar_AutoID}" />
    
    <Style x:Key="ActivityRefreshButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ActivityEditButtonStyle}">
        <Setter Property="Content" Value="{DynamicResource RefreshImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsRefreshing, Mode=TwoWay}" Value="true">
                <Setter Property="Content" Value="{DynamicResource RefreshProgressBar}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>